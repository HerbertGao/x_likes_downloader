name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: x_likes_downloader_linux_x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: x_likes_downloader_windows_x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: x_likes_downloader_macos_x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: x_likes_downloader_macos_arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary for platform
        run: |
          if [ "${{ matrix.target }}" = "x86_64-pc-windows-msvc" ]; then
            cp target/${{ matrix.target }}/release/x_likes_downloader.exe x_likes_downloader_windows_x86_64.exe
          elif [ "${{ matrix.target }}" = "x86_64-unknown-linux-gnu" ]; then
            cp target/${{ matrix.target }}/release/x_likes_downloader x_likes_downloader_linux_x86_64
          elif [ "${{ matrix.target }}" = "x86_64-apple-darwin" ]; then
            cp target/${{ matrix.target }}/release/x_likes_downloader x_likes_downloader_macos_x86_64
          elif [ "${{ matrix.target }}" = "aarch64-apple-darwin" ]; then
            cp target/${{ matrix.target }}/release/x_likes_downloader x_likes_downloader_macos_arm64
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: x_likes_downloader_*

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            x_likes_downloader_linux_x86_64/x_likes_downloader_linux_x86_64
            x_likes_downloader_windows_x86_64.exe/x_likes_downloader_windows_x86_64.exe
            x_likes_downloader_macos_x86_64/x_likes_downloader_macos_x86_64
            x_likes_downloader_macos_arm64/x_likes_downloader_macos_arm64
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 